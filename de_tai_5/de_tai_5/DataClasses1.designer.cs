#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace de_tai_5
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Quan_ly_thu_vien")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCTPM(CTPM instance);
    partial void UpdateCTPM(CTPM instance);
    partial void DeleteCTPM(CTPM instance);
    partial void InsertDOCGIA(DOCGIA instance);
    partial void UpdateDOCGIA(DOCGIA instance);
    partial void DeleteDOCGIA(DOCGIA instance);
    partial void InsertPHIEUMUON(PHIEUMUON instance);
    partial void UpdatePHIEUMUON(PHIEUMUON instance);
    partial void DeletePHIEUMUON(PHIEUMUON instance);
    partial void InsertPHIEUTRA(PHIEUTRA instance);
    partial void UpdatePHIEUTRA(PHIEUTRA instance);
    partial void DeletePHIEUTRA(PHIEUTRA instance);
    partial void InsertSACH(SACH instance);
    partial void UpdateSACH(SACH instance);
    partial void DeleteSACH(SACH instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::de_tai_5.Properties.Settings.Default.Quan_ly_thu_vienConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CTPM> CTPMs
		{
			get
			{
				return this.GetTable<CTPM>();
			}
		}
		
		public System.Data.Linq.Table<DOCGIA> DOCGIAs
		{
			get
			{
				return this.GetTable<DOCGIA>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUMUON> PHIEUMUONs
		{
			get
			{
				return this.GetTable<PHIEUMUON>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUTRA> PHIEUTRAs
		{
			get
			{
				return this.GetTable<PHIEUTRA>();
			}
		}
		
		public System.Data.Linq.Table<SACH> SACHes
		{
			get
			{
				return this.GetTable<SACH>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPM")]
	public partial class CTPM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEUMUON;
		
		private string _MASACH;
		
		private EntityRef<SACH> _SACH;
		
		private EntityRef<PHIEUMUON> _PHIEUMUON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUMUONChanging(string value);
    partial void OnMAPHIEUMUONChanged();
    partial void OnMASACHChanging(string value);
    partial void OnMASACHChanged();
    #endregion
		
		public CTPM()
		{
			this._SACH = default(EntityRef<SACH>);
			this._PHIEUMUON = default(EntityRef<PHIEUMUON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUMUON", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUMUON
		{
			get
			{
				return this._MAPHIEUMUON;
			}
			set
			{
				if ((this._MAPHIEUMUON != value))
				{
					if (this._PHIEUMUON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUMUONChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUMUON = value;
					this.SendPropertyChanged("MAPHIEUMUON");
					this.OnMAPHIEUMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASACH", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASACH
		{
			get
			{
				return this._MASACH;
			}
			set
			{
				if ((this._MASACH != value))
				{
					if (this._SACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASACHChanging(value);
					this.SendPropertyChanging();
					this._MASACH = value;
					this.SendPropertyChanged("MASACH");
					this.OnMASACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_CTPM", Storage="_SACH", ThisKey="MASACH", OtherKey="MASACH", IsForeignKey=true)]
		public SACH SACH
		{
			get
			{
				return this._SACH.Entity;
			}
			set
			{
				SACH previousValue = this._SACH.Entity;
				if (((previousValue != value) 
							|| (this._SACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SACH.Entity = null;
						previousValue.CTPMs.Remove(this);
					}
					this._SACH.Entity = value;
					if ((value != null))
					{
						value.CTPMs.Add(this);
						this._MASACH = value.MASACH;
					}
					else
					{
						this._MASACH = default(string);
					}
					this.SendPropertyChanged("SACH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUMUON_CTPM", Storage="_PHIEUMUON", ThisKey="MAPHIEUMUON", OtherKey="MAPHIEUMUON", IsForeignKey=true)]
		public PHIEUMUON PHIEUMUON
		{
			get
			{
				return this._PHIEUMUON.Entity;
			}
			set
			{
				PHIEUMUON previousValue = this._PHIEUMUON.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUMUON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUMUON.Entity = null;
						previousValue.CTPMs.Remove(this);
					}
					this._PHIEUMUON.Entity = value;
					if ((value != null))
					{
						value.CTPMs.Add(this);
						this._MAPHIEUMUON = value.MAPHIEUMUON;
					}
					else
					{
						this._MAPHIEUMUON = default(string);
					}
					this.SendPropertyChanged("PHIEUMUON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DOCGIA")]
	public partial class DOCGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADOCGIA;
		
		private string _HOTEN;
		
		private int _GIOITINH;
		
		private string _DIACHI;
		
		private EntitySet<PHIEUMUON> _PHIEUMUONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADOCGIAChanging(string value);
    partial void OnMADOCGIAChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnGIOITINHChanging(int value);
    partial void OnGIOITINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    #endregion
		
		public DOCGIA()
		{
			this._PHIEUMUONs = new EntitySet<PHIEUMUON>(new Action<PHIEUMUON>(this.attach_PHIEUMUONs), new Action<PHIEUMUON>(this.detach_PHIEUMUONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADOCGIA", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADOCGIA
		{
			get
			{
				return this._MADOCGIA;
			}
			set
			{
				if ((this._MADOCGIA != value))
				{
					this.OnMADOCGIAChanging(value);
					this.SendPropertyChanging();
					this._MADOCGIA = value;
					this.SendPropertyChanged("MADOCGIA");
					this.OnMADOCGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="Int NOT NULL")]
		public int GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCGIA_PHIEUMUON", Storage="_PHIEUMUONs", ThisKey="MADOCGIA", OtherKey="MADOCGIA")]
		public EntitySet<PHIEUMUON> PHIEUMUONs
		{
			get
			{
				return this._PHIEUMUONs;
			}
			set
			{
				this._PHIEUMUONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUMUONs(PHIEUMUON entity)
		{
			this.SendPropertyChanging();
			entity.DOCGIA = this;
		}
		
		private void detach_PHIEUMUONs(PHIEUMUON entity)
		{
			this.SendPropertyChanging();
			entity.DOCGIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUMUON")]
	public partial class PHIEUMUON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEUMUON;
		
		private string _MADOCGIA;
		
		private System.DateTime _NGAYMUON;
		
		private System.DateTime _NGAYHENTRA;
		
		private EntitySet<CTPM> _CTPMs;
		
		private EntityRef<DOCGIA> _DOCGIA;
		
		private EntityRef<PHIEUTRA> _PHIEUTRA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUMUONChanging(string value);
    partial void OnMAPHIEUMUONChanged();
    partial void OnMADOCGIAChanging(string value);
    partial void OnMADOCGIAChanged();
    partial void OnNGAYMUONChanging(System.DateTime value);
    partial void OnNGAYMUONChanged();
    partial void OnNGAYHENTRAChanging(System.DateTime value);
    partial void OnNGAYHENTRAChanged();
    #endregion
		
		public PHIEUMUON()
		{
			this._CTPMs = new EntitySet<CTPM>(new Action<CTPM>(this.attach_CTPMs), new Action<CTPM>(this.detach_CTPMs));
			this._DOCGIA = default(EntityRef<DOCGIA>);
			this._PHIEUTRA = default(EntityRef<PHIEUTRA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUMUON", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUMUON
		{
			get
			{
				return this._MAPHIEUMUON;
			}
			set
			{
				if ((this._MAPHIEUMUON != value))
				{
					if (this._PHIEUTRA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUMUONChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUMUON = value;
					this.SendPropertyChanged("MAPHIEUMUON");
					this.OnMAPHIEUMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADOCGIA", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADOCGIA
		{
			get
			{
				return this._MADOCGIA;
			}
			set
			{
				if ((this._MADOCGIA != value))
				{
					if (this._DOCGIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADOCGIAChanging(value);
					this.SendPropertyChanging();
					this._MADOCGIA = value;
					this.SendPropertyChanged("MADOCGIA");
					this.OnMADOCGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYMUON", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYMUON
		{
			get
			{
				return this._NGAYMUON;
			}
			set
			{
				if ((this._NGAYMUON != value))
				{
					this.OnNGAYMUONChanging(value);
					this.SendPropertyChanging();
					this._NGAYMUON = value;
					this.SendPropertyChanged("NGAYMUON");
					this.OnNGAYMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYHENTRA", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYHENTRA
		{
			get
			{
				return this._NGAYHENTRA;
			}
			set
			{
				if ((this._NGAYHENTRA != value))
				{
					this.OnNGAYHENTRAChanging(value);
					this.SendPropertyChanging();
					this._NGAYHENTRA = value;
					this.SendPropertyChanged("NGAYHENTRA");
					this.OnNGAYHENTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUMUON_CTPM", Storage="_CTPMs", ThisKey="MAPHIEUMUON", OtherKey="MAPHIEUMUON")]
		public EntitySet<CTPM> CTPMs
		{
			get
			{
				return this._CTPMs;
			}
			set
			{
				this._CTPMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCGIA_PHIEUMUON", Storage="_DOCGIA", ThisKey="MADOCGIA", OtherKey="MADOCGIA", IsForeignKey=true)]
		public DOCGIA DOCGIA
		{
			get
			{
				return this._DOCGIA.Entity;
			}
			set
			{
				DOCGIA previousValue = this._DOCGIA.Entity;
				if (((previousValue != value) 
							|| (this._DOCGIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOCGIA.Entity = null;
						previousValue.PHIEUMUONs.Remove(this);
					}
					this._DOCGIA.Entity = value;
					if ((value != null))
					{
						value.PHIEUMUONs.Add(this);
						this._MADOCGIA = value.MADOCGIA;
					}
					else
					{
						this._MADOCGIA = default(string);
					}
					this.SendPropertyChanged("DOCGIA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUTRA_PHIEUMUON", Storage="_PHIEUTRA", ThisKey="MAPHIEUMUON", OtherKey="MAPHIEUMUON", IsForeignKey=true)]
		public PHIEUTRA PHIEUTRA
		{
			get
			{
				return this._PHIEUTRA.Entity;
			}
			set
			{
				PHIEUTRA previousValue = this._PHIEUTRA.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUTRA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUTRA.Entity = null;
						previousValue.PHIEUMUONs.Remove(this);
					}
					this._PHIEUTRA.Entity = value;
					if ((value != null))
					{
						value.PHIEUMUONs.Add(this);
						this._MAPHIEUMUON = value.MAPHIEUMUON;
					}
					else
					{
						this._MAPHIEUMUON = default(string);
					}
					this.SendPropertyChanged("PHIEUTRA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPMs(CTPM entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUMUON = this;
		}
		
		private void detach_CTPMs(CTPM entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUMUON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUTRA")]
	public partial class PHIEUTRA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEUMUON;
		
		private System.DateTime _NGAYTRA;
		
		private EntitySet<PHIEUMUON> _PHIEUMUONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUMUONChanging(string value);
    partial void OnMAPHIEUMUONChanged();
    partial void OnNGAYTRAChanging(System.DateTime value);
    partial void OnNGAYTRAChanged();
    #endregion
		
		public PHIEUTRA()
		{
			this._PHIEUMUONs = new EntitySet<PHIEUMUON>(new Action<PHIEUMUON>(this.attach_PHIEUMUONs), new Action<PHIEUMUON>(this.detach_PHIEUMUONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUMUON", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUMUON
		{
			get
			{
				return this._MAPHIEUMUON;
			}
			set
			{
				if ((this._MAPHIEUMUON != value))
				{
					this.OnMAPHIEUMUONChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUMUON = value;
					this.SendPropertyChanged("MAPHIEUMUON");
					this.OnMAPHIEUMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTRA", DbType="SmallDateTime NOT NULL")]
		public System.DateTime NGAYTRA
		{
			get
			{
				return this._NGAYTRA;
			}
			set
			{
				if ((this._NGAYTRA != value))
				{
					this.OnNGAYTRAChanging(value);
					this.SendPropertyChanging();
					this._NGAYTRA = value;
					this.SendPropertyChanged("NGAYTRA");
					this.OnNGAYTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUTRA_PHIEUMUON", Storage="_PHIEUMUONs", ThisKey="MAPHIEUMUON", OtherKey="MAPHIEUMUON")]
		public EntitySet<PHIEUMUON> PHIEUMUONs
		{
			get
			{
				return this._PHIEUMUONs;
			}
			set
			{
				this._PHIEUMUONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUMUONs(PHIEUMUON entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUTRA = this;
		}
		
		private void detach_PHIEUMUONs(PHIEUMUON entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUTRA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SACH")]
	public partial class SACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASACH;
		
		private string _TENSACH;
		
		private string _LOAI;
		
		private string _TENTACGIA;
		
		private int _SOLUONG;
		
		private EntitySet<CTPM> _CTPMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASACHChanging(string value);
    partial void OnMASACHChanged();
    partial void OnTENSACHChanging(string value);
    partial void OnTENSACHChanged();
    partial void OnLOAIChanging(string value);
    partial void OnLOAIChanged();
    partial void OnTENTACGIAChanging(string value);
    partial void OnTENTACGIAChanged();
    partial void OnSOLUONGChanging(int value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public SACH()
		{
			this._CTPMs = new EntitySet<CTPM>(new Action<CTPM>(this.attach_CTPMs), new Action<CTPM>(this.detach_CTPMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASACH", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASACH
		{
			get
			{
				return this._MASACH;
			}
			set
			{
				if ((this._MASACH != value))
				{
					this.OnMASACHChanging(value);
					this.SendPropertyChanging();
					this._MASACH = value;
					this.SendPropertyChanged("MASACH");
					this.OnMASACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSACH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENSACH
		{
			get
			{
				return this._TENSACH;
			}
			set
			{
				if ((this._TENSACH != value))
				{
					this.OnTENSACHChanging(value);
					this.SendPropertyChanging();
					this._TENSACH = value;
					this.SendPropertyChanged("TENSACH");
					this.OnTENSACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAI", DbType="Char(15) NOT NULL", CanBeNull=false)]
		public string LOAI
		{
			get
			{
				return this._LOAI;
			}
			set
			{
				if ((this._LOAI != value))
				{
					this.OnLOAIChanging(value);
					this.SendPropertyChanging();
					this._LOAI = value;
					this.SendPropertyChanged("LOAI");
					this.OnLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTACGIA", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENTACGIA
		{
			get
			{
				return this._TENTACGIA;
			}
			set
			{
				if ((this._TENTACGIA != value))
				{
					this.OnTENTACGIAChanging(value);
					this.SendPropertyChanging();
					this._TENTACGIA = value;
					this.SendPropertyChanged("TENTACGIA");
					this.OnTENTACGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int NOT NULL")]
		public int SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_CTPM", Storage="_CTPMs", ThisKey="MASACH", OtherKey="MASACH")]
		public EntitySet<CTPM> CTPMs
		{
			get
			{
				return this._CTPMs;
			}
			set
			{
				this._CTPMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPMs(CTPM entity)
		{
			this.SendPropertyChanging();
			entity.SACH = this;
		}
		
		private void detach_CTPMs(CTPM entity)
		{
			this.SendPropertyChanging();
			entity.SACH = null;
		}
	}
}
#pragma warning restore 1591
